class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2)
    {
        ListNode* l3=nullptr, *current1=l1, *current2=l2, *current3=l3;
        int arr[101]={0},flag=0,index=0,carry=0;
        while(current1 && current2)
        {
            if((current1->val+current2->val+carry)<10)
            {
               arr[index]=current1->val+current2->val+carry;
               carry=0;
            }
            else 
            {
                arr[index]=(current1->val+current2->val+carry)%10;
                carry=1;
            }
            if(current1->next==NULL && current2->next==NULL)flag=0;
            else if (current1->next==NULL)flag=1;
            else if (current2->next==NULL)flag=2;
            current1=current1->next;
            current2=current2->next;
            index++;
        }
        if(flag==1)
        {
            while(current2)
        {    if((current2->val+carry)<10)
            {
                arr[index]=current2->val+carry;
                carry=0;
            }
            else
            {
                 arr[index]=(current2->val+carry)%10;
                carry=1;
            }
            index++;
            current2=current2->next;
        }
        }
        else if(flag==2)
         {
            while(current1)
            {
            if((current1->val+carry)<10)
            {
                arr[index]=current1->val+carry;
                carry=0;
            }
            else
            {
                arr[index]=(current1->val+carry)%10;
                carry=1;
            }
            index++;
            current1=current1->next;
            }
        }
        for(int j=0;j<index;j++)
        {
            ListNode * newnode=new ListNode;
            newnode->val=arr[j];
            if(l3==NULL)
            {
                l3=newnode;
                newnode->next=NULL;
            }
            else
            {
                current3->next=newnode;
                newnode->next=NULL;
            }
            current3=newnode;
        }
        if(carry==1)
        {
            ListNode * newnode=new ListNode;
            newnode->val=1;
            current3->next=newnode;
            newnode->next=NULL;
        }
        return l3;
    } 
};